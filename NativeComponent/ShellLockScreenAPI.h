#pragma once

#pragma region "Constants"

#define ICON_URI_MAX_LENGTH 250
#define DETAILED_TEXT_MAX_LENGTH 250
#define DETAILED_TEXT_MAX_COUNT 3
#define BADGE_MAX_COUNT 5
#define BADGE_VALUE_MAX_LENGTH ICON_URI_MAX_LENGTH

#pragma endregion


#pragma region "Structures"

typedef struct _DETAILED_TEXT_INFORMATION
{

	WCHAR detailedText[DETAILED_TEXT_MAX_LENGTH];
	BOOL isBoldText;

} DETAILED_TEXT_INFORMATION, *LPDETAILED_TEXT_INFORMATION;

typedef enum _BADGE_VALUE_TYPE
{

	BADGE_VALUE_TYPE_NONE,
	BADGE_VALUE_TYPE_COUNT,
	BADGE_VALUE_TYPE_GLYPH

} BADGE_VALUE_TYPE;

typedef struct _BADGE_INFORMATION
{

	BADGE_VALUE_TYPE badgeValueType;
	WCHAR badgeValue[BADGE_VALUE_MAX_LENGTH];
	WCHAR badgeIconUri[ICON_URI_MAX_LENGTH];

} BADGE_INFORMATION, *LPBADGE_INFORMATION;

typedef struct _DEVICE_LOCK_SCREEN_SNAPSHOT
{

	DWORD size;
	WCHAR drivingModeIconUri[ICON_URI_MAX_LENGTH];
	WCHAR doNotDisturbModeIconUri[ICON_URI_MAX_LENGTH];
	WCHAR alarmIconUri[ICON_URI_MAX_LENGTH];
	DWORD detailedTextCount;
	DETAILED_TEXT_INFORMATION detailedTexts[DETAILED_TEXT_MAX_COUNT];
	DWORD badgeCount;
	BADGE_INFORMATION badges[BADGE_MAX_COUNT];

} DEVICE_LOCK_SCREEN_SNAPSHOT, *LPDEVICE_LOCK_SCREEN_SNAPSHOT;

#pragma endregion


HRESULT Shell_LockScreen_GetNotificationsSnapshot(_Inout_ LPDEVICE_LOCK_SCREEN_SNAPSHOT pSnapshot);